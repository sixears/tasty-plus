{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE UnicodeSyntax     #-}

module Fluffy.T.Tasty
  ( tests )
where

import Prelude ( Int )

-- base --------------------------------

import Control.Monad  ( (>>=), return )
import Data.Either    ( Either( Left, Right ) )
import Data.Foldable  ( Foldable, concat, concatMap )
import Data.Function  ( (.), ($) )
import Data.String    ( String )
import System.IO      ( IO )

-- tasty -------------------------------

import Test.Tasty  ( TestTree, testGroup )

-- tasty-hunit -------------------------

import Test.Tasty.HUnit  ( (@?=), testCase )

-- text --------------------------------

import Data.Text  ( Text )

------------------------------------------------------------
--                     local imports                      --
------------------------------------------------------------

import Fluffy.Foldable  ( length )
import Fluffy.Tasty     ( TastyRunResult( TestsFailed, TestSuccess )
                        , (#=?)
                        , assertListEq, assertListEqR, assertRight
                        , runTestsP, runTestTree
                        )

-------------------------------------------------------------------------------

-- that's all, folks! ---------------------------------------------------------
